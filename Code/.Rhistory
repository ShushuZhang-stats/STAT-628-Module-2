out_ind=as.numeric(which(cooksd>4*mean(cooksd, na.rm=T)))
plot(cooksd, pch="*", cex=2, main=name[i])  # plot cook's distance
abline(h = 4*mean(cooksd, na.rm=T), col="red")  # add cutoff line
text(x=1:length(cooksd)+1, y=cooksd, labels=ifelse(cooksd>4*mean(cooksd, na.rm=T),names(cooksd),""), col="red")  # add labels
#  data$ANKLE[which(mod_ankle$residuals>5)]=round(mod_ankle$fitted.values[which(mod_ankle$residuals>5)],2)
}
unique(out_ind)
sort(data$BODYFAT)
data[216,]
data[96,]
BMI[96]
data[42]
data[42,]
BMI[42]
data[which(data$BODYFAT==0),]
mod$fitted.values
mod$residuals[182]
I=2
i=2
mod=lm(as.formula(paste(name[i], "~.-IDNO")),data=data)
cooksd <- cooks.distance(mod)
out_ind=as.numeric(which(cooksd>4*mean(cooksd, na.rm=T)))
plot(cooksd, pch="*", cex=2, main=name[i])  # plot cook's distance
abline(h = 4*mean(cooksd, na.rm=T), col="red")  # add cutoff line
text(x=1:length(cooksd)+1, y=cooksd, labels=ifelse(cooksd>4*mean(cooksd, na.rm=T),names(cooksd),""), col="red")  # add labels
cooksd[182]
mod=lm(as.formula(paste(name[i], "~.-IDNO-DENSITY"
, collapse = "+")),data=data)
res=scale(mod$residuals)
res[182]
mod$residuals[182]
mod$fitted.values[182]
sort(res)
order(data$BODYFAT)
head(sort(data$BODYFAT))
which(data$BODYFAT==1.9)
out_ind=c()
name=colnames(data)
par(mfrow=c(4,4),mar=c(1,1,1,1))
for (i in c(2,4:length(data)))
{
mod=lm(as.formula(paste(name[i], "~.-IDNO-DENSITY"
, collapse = "+")),data=data)
res=scale(mod$residuals)
out_ind=c(out_ind,as.numeric(which(abs(res)>4)))
plot(res,main=name[i])
text(x=1:length(cooksd)+1, y=res, labels=ifelse(abs(res)>4,names(mod$residuals),""), col="red")  # add labels
#  data$ANKLE[which(mod_ankle$residuals>5)]=round(mod_ankle$fitted.values[which(mod_ankle$residuals>5)],2)
}
unique(out_ind)
out_ind=c()
name=colnames(data)
par(mfrow=c(4,4),mar=c(1,1,1,1))
for (i in c(2,4:length(data)))
{
mod=lm(as.formula(paste(name[i], "~.-IDNO"
, collapse = "+")),data=data)
res=scale(mod$residuals)
out_ind=c(out_ind,as.numeric(which(abs(res)>4)))
plot(res,main=name[i])
text(x=1:length(cooksd)+1, y=res, labels=ifelse(abs(res)>4,names(mod$residuals),""), col="red")  # add labels
#  data$ANKLE[which(mod_ankle$residuals>5)]=round(mod_ankle$fitted.values[which(mod_ankle$residuals>5)],2)
}
unique(out_ind)
data[96,]
out_ind=c()
name=colnames(data)
par(mfrow=c(4,4),mar=c(1,1,1,1))
for (i in c(2,4:length(data)))
{
mod=lm(as.formula(paste(name[i], "~.-IDNO")),data=data)
cooksd <- cooks.distance(mod)
out_ind=as.numeric(which(cooksd>4*mean(cooksd, na.rm=T)))
plot(cooksd, pch="*", cex=2, main=name[i])  # plot cook's distance
abline(h = 4*mean(cooksd, na.rm=T), col="red")  # add cutoff line
text(x=1:length(cooksd)+1, y=cooksd, labels=ifelse(cooksd>4*mean(cooksd, na.rm=T),names(cooksd),""), col="red")  # add labels
#  data$ANKLE[which(mod_ankle$residuals>5)]=round(mod_ankle$fitted.values[which(mod_ankle$residuals>5)],2)
}
unique(out_ind)
data[data$BODYFAT==0]
data[data$BODYFAT==0,]
data[42,"HEIGHT"]=round(sqrt(data[42,"WEIGHT"]*0.453592/data[42,"ADIPOSITY"])/0.0254,2)
data[96,]
summary(data)
data[182,]
data[172,]
data[216,]
data[39,]
sort(data$BODYFAT)
data[36,]
output
out_ind
data[175,]
data[41,]
sort(data$KNEE)
sort(data$THIGH)
out_ind=c()
name=colnames(data)
par(mfrow=c(4,4),mar=c(1,1,1,1))
for (i in c(2,4:length(data)))
{
mod=lm(as.formula(paste(name[i], "~.-IDNO"
, collapse = "+")),data=data)
res=scale(mod$residuals)
out_ind=c(out_ind,as.numeric(which(abs(res)>5)))
plot(res,main=name[i])
text(x=1:length(cooksd)+1, y=res, labels=ifelse(abs(res)>5,names(mod$residuals),""), col="red")  # add labels
}
unique(out_ind)
out_ind=c()
name=colnames(data)
par(mfrow=c(4,4),mar=c(1,1,1,1))
for (i in c(2,4:length(data)))
{
mod=lm(as.formula(paste(name[i], "~.-IDNO"
, collapse = "+")),data=data)
res=scale(mod$residuals)
out_ind=c(out_ind,as.numeric(which(abs(res)>4)))
plot(res,main=name[i])
text(x=1:length(cooksd)+1, y=res, labels=ifelse(abs(res)>4,names(mod$residuals),""), col="red")  # add labels
}
unique(out_ind)
# Import Data
data=read.csv("../Data/BodyFat.csv")
out_ind=c()
name=colnames(data)
par(mfrow=c(4,4),mar=c(1,1,1,1))
for (i in c(2,4:length(data)))
{
mod=lm(as.formula(paste(name[i], "~.-IDNO")),data=data)
cooksd <- cooks.distance(mod)
out_ind=as.numeric(which(cooksd>4*mean(cooksd, na.rm=T)))
plot(cooksd, pch="*", cex=2, main=name[i])  # plot cook's distance
abline(h = 4*mean(cooksd, na.rm=T), col="red")  # add cutoff line
text(x=1:length(cooksd)+1, y=cooksd, labels=ifelse(cooksd>4*mean(cooksd, na.rm=T),names(cooksd),""), col="red")  # add labels
#  data$ANKLE[which(mod_ankle$residuals>5)]=round(mod_ankle$fitted.values[which(mod_ankle$residuals>5)],2)
}
unique(out_ind)
out_ind=c()
name=colnames(data)
par(mfrow=c(4,4),mar=c(1,1,1,1))
for (i in c(2,4:length(data)))
{
mod=lm(as.formula(paste(name[i], "~.-IDNO"
, collapse = "+")),data=data)
res=scale(mod$residuals)
out_ind=c(out_ind,as.numeric(which(abs(res)>4)))
plot(res,main=name[i])
text(x=1:length(cooksd)+1, y=res, labels=ifelse(abs(res)>4,names(mod$residuals),""), col="red")  # add labels
}
unique(out_ind)
out_ind=c()
name=colnames(data)
par(mfrow=c(4,4),mar=c(1,1,1,1))
for (i in c(2,4:length(data)))
{
mod=lm(as.formula(paste(name[i], "~.-IDNO"
, collapse = "+")),data=data)
res=scale(mod$residuals)
out_ind=c(out_ind,as.numeric(which(abs(res)>5)))
plot(res,main=name[i])
text(x=1:length(cooksd)+1, y=res, labels=ifelse(abs(res)>5,names(mod$residuals),""), col="red")  # add labels
}
unique(out_ind)
out_ind=c()
name=colnames(data)
par(mfrow=c(4,4),mar=c(1,1,1,1))
for (i in c(2,4:length(data)))
{
mod=lm(as.formula(paste(name[i], "~.-IDNO"
, collapse = "+")),data=data)
res=scale(mod$residuals)
out_ind=c(out_ind,as.numeric(which(abs(res)>6)))
plot(res,main=name[i])
text(x=1:length(cooksd)+1, y=res, labels=ifelse(abs(res)>6,names(mod$residuals),""), col="red")  # add labels
}
unique(out_ind)
out_ind=c()
name=colnames(data)
par(mfrow=c(4,4),mar=c(1,1,1,1))
for (i in c(2,4:length(data)))
{
mod=lm(as.formula(paste(name[i], "~.-IDNO")),data=data)
cooksd <- cooks.distance(mod)
out_ind=as.numeric(which(cooksd>5*mean(cooksd, na.rm=T)))
plot(cooksd, pch="*", cex=2, main=name[i])  # plot cook's distance
abline(h = 4*mean(cooksd, na.rm=T), col="red")  # add cutoff line
text(x=1:length(cooksd)+1, y=cooksd, labels=ifelse(cooksd>5*mean(cooksd, na.rm=T),names(cooksd),""), col="red")  # add labels
#  data$ANKLE[which(mod_ankle$residuals>5)]=round(mod_ankle$fitted.values[which(mod_ankle$residuals>5)],2)
}
unique(out_ind)
out_ind=c()
name=colnames(data)
par(mfrow=c(4,4),mar=c(1,1,1,1))
for (i in c(2,4:length(data)))
{
mod=lm(as.formula(paste(name[i], "~.-IDNO")),data=data)
cooksd <- cooks.distance(mod)
out_ind=as.numeric(which(cooksd>6*mean(cooksd, na.rm=T)))
plot(cooksd, pch="*", cex=2, main=name[i])  # plot cook's distance
abline(h = 4*mean(cooksd, na.rm=T), col="red")  # add cutoff line
text(x=1:length(cooksd)+1, y=cooksd, labels=ifelse(cooksd>6*mean(cooksd, na.rm=T),names(cooksd),""), col="red")  # add labels
#  data$ANKLE[which(mod_ankle$residuals>5)]=round(mod_ankle$fitted.values[which(mod_ankle$residuals>5)],2)
}
unique(out_ind)
data[36,]
out_ind=c()
name=colnames(data)
par(mfrow=c(4,4),mar=c(1,1,1,1))
for (i in c(2,4:length(data)))
{
mod=lm(as.formula(paste(name[i], "~.-IDNO"
, collapse = "+")),data=data)
res=scale(mod$residuals)
out_ind=c(out_ind,as.numeric(which(abs(res)>7)))
plot(res,main=name[i])
text(x=1:length(cooksd)+1, y=res, labels=ifelse(abs(res)>7,names(mod$residuals),""), col="red")  # add labels
}
unique(out_ind)
data[48,]
data[175,]
sort(data$FOREARM)
sort(data$NECK)
data[39,]
out_ind=c()
name=colnames(data)
par(mfrow=c(4,4),mar=c(1,1,1,1))
for (i in c(2,4:length(data)))
{
mod=lm(as.formula(paste(name[i], "~.-IDNO"
, collapse = "+")),data=data)
res=scale(mod$residuals)
out_ind=c(out_ind,as.numeric(which(abs(res)>6)))
plot(res,main=name[i])
text(x=1:length(cooksd)+1, y=res, labels=ifelse(abs(res)>6,names(mod$residuals),""), col="red")  # add labels
}
unique(out_ind)
sort(data$ADIPOSITY)
out_ind=c()
name=colnames(data)
par(mfrow=c(4,4),mar=c(1,1,1,1))
for (i in c(2,4:length(data)))
{
mod=lm(as.formula(paste(name[i], "~.-IDNO"
, collapse = "+")),data=data)
res=scale(mod$residuals)
out_ind=c(out_ind,as.numeric(which(abs(res)>8)))
plot(res,main=name[i])
text(x=1:length(cooksd)+1, y=res, labels=ifelse(abs(res)>8,names(mod$residuals),""), col="red")  # add labels
}
unique(out_ind)
### Imputation of Misplaced Outliers
#### BodyFat (96 182 219)
data=data[-c(96,182,219),] #Remove 96,182,219
data[42,"HEIGHT"]=round(sqrt(data[42,"WEIGHT"]*0.453592/data[42,"ADIPOSITY"])/0.0254,2)
#### Ankle Outlier (31,86)
mod=lm(as.formula(paste(name[i], "~.-IDNO"
, collapse = "+")),data=data)
data$ANKLE[c(31,86)]=round(mod_ankle$fitted.values[c(31,86)],2)
out_ind=c()
name=colnames(data)
par(mfrow=c(4,4),mar=c(1,1,1,1))
for (i in c(2,4:length(data)))
{
mod=lm(as.formula(paste(name[i], "~.-IDNO")),data=data)
cooksd <- cooks.distance(mod)
out_ind=as.numeric(which(cooksd>6*mean(cooksd, na.rm=T)))
plot(cooksd, pch="*", cex=2, main=name[i])  # plot cook's distance
abline(h = 4*mean(cooksd, na.rm=T), col="red")  # add cutoff line
text(x=1:length(cooksd)+1, y=cooksd, labels=ifelse(cooksd>6*mean(cooksd, na.rm=T),names(cooksd),""), col="red")  # add labels
}
unique(out_ind)
out_ind=c()
name=colnames(data)
par(mfrow=c(4,4),mar=c(1,1,1,1))
for (i in c(2,4:length(data)))
{
mod=lm(as.formula(paste(name[i], "~.-IDNO"
, collapse = "+")),data=data)
res=scale(mod$residuals)
out_ind=c(out_ind,as.numeric(which(abs(res)>8)))
plot(res,main=name[i])
text(x=1:length(cooksd)+1, y=res, labels=ifelse(abs(res)>8,names(mod$residuals),""), col="red")  # add labels
}
unique(out_ind)
data
summary(data)
data[42,]
## Modeling
mod=lm(BODYFAT~.-IDNO-DENSITY,data=data)
summary(mod)
plot(mod$residuals)
plot(mod$residuals)
mod=lm(BODYFAT~.-IDNO-DENSITY,data=data)
summary(mod)
library(olsrr)
ols_step_best_subset(mod)
mod_final=lm(BODYFAT~WEIGHT+NECK+ABDOMEN+FOREARM+WRIST,data=data)
par(mfrow = c(1,1))
plot(predict(mod_final),resid(mod_final),pch=19,cex=1.2,cex.lab=1.5,cex.main=1.5,
xlab="Predicted Body Fat %", ylab="Standardized Residuals",main="Standardized Residual Plot")
abline(a=0,b=0,col="black",lwd=3)
## QQ Plot
qqnorm(rstandard(mod_final),pch=19,cex=1.2,cex.lab=1.5,cex.main=1.5,
main="Normal Q-Q Plot of the Residuals")
abline(a=0,b=1,col="black",lwd=3)
##
pii = hatvalues(mod_final)
cooki = cooks.distance(mod_final)
par(mfrow = c(2,1))
n = dim(data)[1]
plot(1:n,pii,type="p",pch=19,cex=1.2,cex.lab=1.5,cex.main=1.5,
xlab="Index (Each Observation)",ylab="Pii",main="Leverage Values (Pii)")
plot(1:n,cooki,type="p",pch=19,cex=1.2,cex.lab=1.5,cex.main=1.5,
xlab="Index (Each Observation)",ylab="Cook's Distance",main="Influence Values (Cook's Distance)")
margins()
par(mfrow = c(2,1),mar=c(1,1,1,1))
n = dim(data)[1]
plot(1:n,pii,type="p",pch=19,cex=1.2,cex.lab=1.5,cex.main=1.5,
xlab="Index (Each Observation)",ylab="Pii",main="Leverage Values (Pii)")
plot(1:n,cooki,type="p",pch=19,cex=1.2,cex.lab=1.5,cex.main=1.5,
xlab="Index (Each Observation)",ylab="Cook's Distance",main="Influence Values (Cook's Distance)")
par(mfrow = c(2,1),mar=c(2,2,2,2))
n = dim(data)[1]
plot(1:n,pii,type="p",pch=19,cex=1.2,cex.lab=1.5,cex.main=1.5,
xlab="Index (Each Observation)",ylab="Pii",main="Leverage Values (Pii)")
plot(1:n,cooki,type="p",pch=19,cex=1.2,cex.lab=1.5,cex.main=1.5,
xlab="Index (Each Observation)",ylab="Cook's Distance",main="Influence Values (Cook's Distance)")
par(mfrow = c(1,1))
plot(predict(mod_final),resid(mod_final),pch=19,cex=1.2,cex.lab=1.5,cex.main=1.5,
xlab="Predicted Body Fat %", ylab="Standardized Residuals",main="Standardized Residual Plot")
abline(a=0,b=0,col="black",lwd=3)
qqnorm(rstandard(mod_final),pch=19,cex=1.2,cex.lab=1.5,cex.main=1.5,
main="Normal Q-Q Plot of the Residuals")
abline(a=0,b=1,col="black",lwd=3)
pii = hatvalues(mod_final)
cooki = cooks.distance(mod_final)
par(mfrow = c(2,1),mar=c(2,2,2,2))
n = dim(data)[1]
plot(1:n,pii,type="p",pch=19,cex=1.2,cex.lab=1.5,cex.main=1.5,
xlab="Index (Each Observation)",ylab="Pii",main="Leverage Values (Pii)")
plot(1:n,cooki,type="p",pch=19,cex=1.2,cex.lab=1.5,cex.main=1.5,
xlab="Index (Each Observation)",ylab="Cook's Distance",main="Influence Values (Cook's Distance)")
summary(mod_final)
out_ind=c()
name=colnames(data)
par(mfrow=c(4,4),mar=c(1,1,1,1))
for (i in c(2,4:length(data)))
{
mod=lm(as.formula(paste(name[i], "~.-IDNO")),data=data)
cooksd <- cooks.distance(mod)
out_ind=as.numeric(which(cooksd>8*mean(cooksd, na.rm=T)))
plot(cooksd, pch="*", cex=2, main=name[i])  # plot cook's distance
abline(h = 4*mean(cooksd, na.rm=T), col="red")  # add cutoff line
text(x=1:length(cooksd)+1, y=cooksd, labels=ifelse(cooksd>8*mean(cooksd, na.rm=T),names(cooksd),""), col="red")  # add labels
}
unique(out_ind)
### BodyFat (96 182 219)
mod=lm(BODYFAT~DENSITY,data=data)
plot(mod$residuals)
data[86,]
res=scale(mod$residuals)
out_ind=c(out_ind,as.numeric(which(abs(res)>8)))
plot(res,main=name[i])
text(x=1:length(cooksd)+1, y=res, labels=ifelse(abs(res)>8,names(mod$residuals),""), col="red")  # add labels
mod=lm(DENSITY~.-IDNO-BODYFAT,data=data)
res=scale(mod$residuals)
out_ind=c(out_ind,as.numeric(which(abs(res)>8)))
plot(res,main=name[i])
text(x=1:length(cooksd)+1, y=res, labels=ifelse(abs(res)>8,names(mod$residuals),""), col="red")  # add labels
mod=lm(DENSITY~.-IDNO-BODYFAT,data=data)
res=scale(mod$residuals)
out_ind=c(out_ind,as.numeric(which(abs(res)>8)))
plot(res,main=name[2])
text(x=1:length(cooksd)+1, y=res, labels=ifelse(abs(res)>8,names(mod$residuals),""), col="red")  # add labels
mod=lm(DENSITY~.-IDNO-BODYFAT,data=data)
res=scale(mod$residuals)
out_ind=c(out_ind,as.numeric(which(abs(res)>8)))
plot(res,main=name[3])
text(x=1:length(cooksd)+1, y=res, labels=ifelse(abs(res)>8,names(mod$residuals),""), col="red")  # add labels
mod=lm(BODYFAT~DENSITY,data=data)
res=scale(mod$residuals)
out_ind=c(out_ind,as.numeric(which(abs(res)>5)))
plot(res,main=name[i])
text(x=1:length(cooksd)+1, y=res, labels=ifelse(abs(res)>5,names(mod$residuals),""), col="red")  # add labels
out <- boxplot.stats(data$BODYFAT)$out
boxplot(data[,i],
ylab = "BodyFat",
main = "Boxplot of BodyFat"
)
mtext(paste("Outliers: ", paste(out, collapse = ", ")))
out_ind <- which(data$BODYFAT %in% c(out))
data[out_ind,]
res[216]
mod$residuals[216]
data=read.csv("../Data/BodyFat.csv")
head(data)
summary(data)
#### Residual Plot (96  42  31  86 48 76)
out_ind=c()
mod=lm(DENSITY~.-IDNO-BODYFAT,data=data)
res=scale(mod$residuals)
out_ind=c(out_ind,as.numeric(which(abs(res)>8)))
plot(res,main=name[3])
text(x=1:length(cooksd)+1, y=res, labels=ifelse(abs(res)>8,names(mod$residuals),""), col="red")  # add labels
mod=lm(BODYFAT~DENSITY,data=data)
res=scale(mod$residuals)
out_ind=c(out_ind,as.numeric(which(abs(res)>5)))
plot(res,main=name[2])
text(x=1:length(cooksd)+1, y=res, labels=ifelse(abs(res)>5,names(mod$residuals),""), col="red")  # add labels
unique(out_ind)
data[216,]
mod$fitted.values
data[96,]
mod$fitted.values
mod$fitted.values[96]
summary(data)
data[96,]
summary(mod)
out_ind=c()
name=colnames(data)
par(mfrow=c(4,4),mar=c(1,1,1,1))
for (i in 4:length(data))
{
mod=lm(as.formula(paste(name[i], "~.-IDNO"
, collapse = "+")),data=data)
res=scale(mod$residuals)
out_ind=c(out_ind,as.numeric(which(abs(res)>8)))
plot(res,main=name[i])
text(x=1:length(cooksd)+1, y=res, labels=ifelse(abs(res)>8,names(mod$residuals),""), col="red")  # add labels
}
unique(out_ind)
out_ind=c()
name=colnames(data)
par(mfrow=c(4,4),mar=c(1,1,1,1))
for (i in 4:length(data))
{
mod=lm(as.formula(paste(name[i], "~.-IDNO"
, collapse = "+")),data=data)
res=scale(mod$residuals)
out_ind=c(out_ind,as.numeric(which(abs(res)>6)))
plot(res,main=name[i])
text(x=1:length(cooksd)+1, y=res, labels=ifelse(abs(res)>6,names(mod$residuals),""), col="red")  # add labels
}
unique(out_ind)
data[175,]
sort(data$FOREARM)
data=read.csv("../Data/BodyFat.csv")
head(data)
summary(data)
data[42,"HEIGHT"]=round(sqrt(data[42,"WEIGHT"]*0.453592/data[42,"ADIPOSITY"])/0.0254,2)
mod_ankle=lm(as.formula(paste(name[i], "~.-IDNO"
, collapse = "+")),data=data)
data$ANKLE[c(31,86)]=round(mod_ankle$fitted.values[c(31,86)],2)
mod_forearm=lm(FOREARM~.-IDNO,data=data)
data$FOREARM[175]=round(mod_forearm$fitted.values[175],2)
mod_BodyFat=lm(BODYFAT~DENSITY,data=data)
data$BODYFAT[c(48,96)]=round(mod_BodyFat$fitted.values[c(48,96)],2)
data=data[-c(182,219),] #Remove 182,216
data[175,]
### BodyFat (48 96 182 219)
mod_BodyFat=lm(BODYFAT~DENSITY,data=data)
plot(mod_BodyFat$residuals)
plot(mod_BodyFat$residuals)
mod=lm(BODYFAT~DENSITY,data=data)
res=scale(mod$residuals)
out_ind=c(out_ind,as.numeric(which(abs(res)>5)))
plot(res,main=name[2])
text(x=1:length(cooksd)+1, y=res, labels=ifelse(abs(res)>5,names(mod$residuals),""), col="red")  # add labels
unique(out_ind)
# Import Data
data=read.csv("../Data/BodyFat.csv")
mod=lm(BODYFAT~DENSITY,data=data)
res=scale(mod$residuals)
out_ind=c(out_ind,as.numeric(which(abs(res)>5)))
plot(res,main=name[2])
text(x=1:length(cooksd)+1, y=res, labels=ifelse(abs(res)>5,names(mod$residuals),""), col="red")  # add labels
mod=lm(BODYFAT~DENSITY,data=data)
res=scale(mod$residuals)
out_ind=c(out_ind,as.numeric(which(abs(res)>3)))
plot(res,main=name[2])
text(x=1:length(cooksd)+1, y=res, labels=ifelse(abs(res)>3,names(mod$residuals),""), col="red")  # add labels
unique(out_ind)
# Import Data
data=read.csv("../Data/BodyFat.csv")
data[42,"HEIGHT"]=round(sqrt(data[42,"WEIGHT"]*0.453592/data[42,"ADIPOSITY"])/0.0254,2)
mod_ankle=lm(as.formula(paste(name[i], "~.-IDNO"
, collapse = "+")),data=data)
data$ANKLE[c(31,86)]=round(mod_ankle$fitted.values[c(31,86)],2)
mod_forearm=lm(FOREARM~.-IDNO,data=data)
data$FOREARM[175]=round(mod_forearm$fitted.values[175],2)
mod_BodyFat=lm(BODYFAT~DENSITY,data=data)
data$BODYFAT[c(48,76,96)]=round(mod_BodyFat$fitted.values[c(48,76,96)],2)
data=data[-c(182,219),] #Remove 182,216
mod=lm(BODYFAT~DENSITY,data=data)
res=scale(mod$residuals)
plot(res,main=name[2])
text(x=1:length(cooksd)+1, y=res, labels=ifelse(abs(res)>3,names(mod$residuals),""), col="red")  # add labels
## Write Cleaned Data Out
write.csv("./Data/Data_Cleaned.csv",data)
?write.csv
## Write Cleaned Data Out
write.csv(data,"./Data/Data_Cleaned.csv")
getwd()
## Write Cleaned Data Out
write.csv(data,"../Data/Data_Cleaned.csv")
mod_final=lm(BODYFAT~WEIGHT+NECK+ABDOMEN+FOREARM+WRIST,data=data)
summary(mod_final)
# Import Data
data=read.csv("../Data/BodyFat.csv")
mod_final=lm(BODYFAT~WEIGHT+NECK+ABDOMEN+BICEPS+FOREARM+WRIST,data=data)
summary(mod_final)
